#ФРТК, 4-й курс, ТЗ
Более детальное ТЗ на курсовые проекты (менее детальное давал устно на занятиях). Платформа должна быть согласована с преподавателем. Пересечение используемых платформ между командами не допускается. Остальные пункты ТЗ относятся ко всем платформам.

Минимальные требования
1) Программа работает в двух режимах: шифрования и расшифрования.

2) В режиме шифрования принимает на вход файл пользователя, алгоритм шифрования (выбор из списка) и пароль (-и) шифрования, либо**, вместо последнего, дополнительные данные (открытый (-ые) ключ (-и)).

** в случае, если в программе пока не реализовано шифрования на асимметричных алгоритмах, можно не давать выбирать файлы. Если не реализованы симметричные -- не давать выбирать пароли.

3) В режиме расшифрования принимает файл и дополнительные данные на основе анализа файла: пароль (один) для расшифрования либо закрытый ключ (тоже один). Алгоритм должен определяться из файла.

4) Минимально должен быть реализован один любой шифр (не важно, симметричный или асимметричный).

Формат файла с шифром у всех команд должен совпадать.

Дополнительные требования в порядке приоритета реализации
1) Программа поддерживает шифр Цезаря.

2) Программа поддерживает шифр Виженера.

3) Программа автоматически выбирает шифр для расшифровки на основании данных файла

4) "-"... шифр AES (использовать сторонние библиотеки здесь и далее -- можно)

5) "-"... шифр DES

6) "-"... шифр ГОСТ «Магма»

7) "-"... шифр ГОСТ «Кузнечик»

8) Программа автоматически вычисляет хеш-сумму от пароля для подтверждения корректности ввода пароля при расшифровке. Хеширование выполняется алгоритмом SHA-2 (256 бит). Данная хеш-сумма записывается в файл для возможности проверки пароля при вводе.

В случае реализации пунктов 9-13 программа должна поддерживать наиболее поздний пункт при шифровании, и все реализованные -- при расшифровании. То есть если команда реализовала п. 10, то при шифровании используется Стрибог, но при расшифровании может быть использован и SHA-2, и SHA-2 с солью, и Стрибог.

В случае неподдерживаемой соли программа по прежнему должна пытаться расшифровать файл (даже без возможности проверить пароль).

9) ...с поддержкой соли

10) SHA-2 / 512 бит

11) SHA3

12) ...а также алгоритмом Стрибог

13) ...а также алгоритмом bcrypt

14) Программа должна выдавать предупреждение, если используется неподдерживаемая хеш-функция на входе

15) Программа поддерживает алгоритм гибридного шифрования с использованием шифра RSA

16) "-"... шифра Эль-Гамаля

17) "-"... шифра на эллиптических кривых

18) Программа позволяет расшифровать файл нескольким получателям (с разными ключами)

19) Открытые ключи для шифрования с помощью асиметричных алгоритмов можно вводить в формате OpenSSH, «ssh-rsa AAAAB…»

20) ...в формате «PKCS#8», «BEGIN PUBLIC KEY»

21) …в формате PKCS#1, «BEGIN [RSA/DH/EC] PUBLIC KEY»

22) Закрытые ключи для шифрования с помощью асиметричных алгоритмов можно вводить в формате «PKCS#1», «BEGIN [RSA/DH/EC] PRIVATE KEY»

23) …в формате PKCS#8, «BEGIN PRIVATE KEY»
